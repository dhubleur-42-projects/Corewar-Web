name: Staging update

env:
    PNPM_VERSION: '10.12.4'
    NODE_VERSION: '23'

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: true

jobs:
    lint-front-app:
        name: Lint front-app

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/front-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-back-app:
        name: Lint back-app

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/back-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-server-common:
        name: Lint server-common

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: libs/server-common

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    build:
        name: Build apps
        needs:
            - lint-front-app
            - lint-back-app
            - lint-server-common

        runs-on: ubuntu-24.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Build and push back-app image
              id: push
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: back-app
                  platforms: linux/amd64
                  build-args: |
                      ENVIRONMENT=staging
                  tags: |
                      onorahubleur/corewar-back-app:staging-latest
                      onorahubleur/corewar-back-app:staging-${{ steps.vars.outputs.sha_short }}

            - name: Build and push front-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: front-app
                  platforms: linux/amd64
                  build-args: |
                      ENVIRONMENT=staging
                  tags: |
                      onorahubleur/corewar-front-app:staging-latest
                      onorahubleur/corewar-front-app:staging-${{ steps.vars.outputs.sha_short }}

    deploy:
        name: Deploy to Kubernetes
        needs: build
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Set up kubeconfig
              run: |
                mkdir -p ~/.kube
                echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Deploy
              run: |
                  ./infra/deploy_staging.sh ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ steps.vars.outputs.sha_short }}

    comment-discord:
      name: Notify Discord with deployment info
      needs: deploy
      runs-on: ubuntu-24.04
      steps:
        - name: Set short commit SHA
          run: echo "COMMIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

        - name: Send Discord notification
          run: |
            curl -H "Content-Type: application/json" \
                -d "{\"content\": \"ðŸš€ Deployment Info\n\nCommit \`${COMMIT_SHA}\` has been deployed to the **staging environment**.\n\n- Frontend: \`https://staging-corewar.ozyria.fr\`\n- Backend: \`https://staging-corewar-api.ozyria.fr\`\n\n> Note: This environment is for testing purposes only.\"}" \
                ${{ secrets.DISCORD_WEBHOOK_URL }}
