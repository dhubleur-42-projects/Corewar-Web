name: Staging workflow

env:
    PNPM_VERSION: '10.12.4'
    NODE_VERSION: '23'

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: true

jobs:
    lint:
        name: Lint
        uses: ./.github/workflows/lint.yaml

    variables:
        name: Store variables

        runs-on: ubuntu-24.04
        outputs:
            sha_short: ${{ steps.vars.outputs.sha_short }}

        steps:
            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

    prepare-tags:
        name: Prepare tags
        needs:
            - variables
        runs-on: ubuntu-24.04
        outputs:
            tags: ${{ steps.set-tags.outputs.tags }}
        steps:
            - name: Compute tags
              id: set-tags
              run: |
                  SHA=${{ needs.variables.outputs.sha_short }}

                  TAG_LIST="staging-latest staging-${SHA}"

                  echo "Tags: $TAG_LIST"
                  echo "tags=$TAG_LIST" >> $GITHUB_OUTPUT

    build:
        name: Build apps
        needs:
            - lint
            - prepare-tags

        uses: ./.github/workflows/build-images.yaml
        with:
            buildArgs: |
                ENVIRONMENT=staging
                BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            tags: ${{ needs.prepare-tags.outputs.tags }}
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    deploy:
        name: Deploy to Kubernetes
        needs:
            - variables
            - build
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up kubeconfig
              run: |
                  mkdir -p ~/.kube
                  echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Deploy
              run: |
                  ./infra/deploy_staging.sh ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ needs.variables.outputs.sha_short }}

    comment-discord:
        name: Notify Discord with deployment info
        needs: deploy
        runs-on: ubuntu-24.04
        steps:
            - name: Set short commit SHA
              run: echo "COMMIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

            - name: Send Discord notification
              run: |
                  curl -H "Content-Type: application/json" \
                      -d "{\"content\": \"ðŸš€ Deployment Info\n\nCommit \`${COMMIT_SHA}\` has been deployed to the **staging environment**.\n\n- Frontend: \`https://staging-corewar.ozyria.fr\`\n- Backend: \`https://staging-corewar-api.ozyria.fr\`\n- Exec API: \`https://staging-corewar-exec.ozyria.fr\`\n\n> Note: This environment is for testing purposes only.\"}" \
                      ${{ secrets.DISCORD_WEBHOOK_URL }}

    clean-old-images:
        name: Clean old staging images
        needs: build
        uses: ./.github/workflows/clean-old-images.yaml
        with:
            tagPrefix: staging-
            keepCount: 10
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
