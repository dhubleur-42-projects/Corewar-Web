# create back-app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-app
  namespace: corewar-staging
spec:
  selector:
    matchLabels:
      app: back-app
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: back-app
    spec:
      containers:
        - name: back-app
          image: onorahubleur/corewar-back-app:staging-{{COMMIT_SHA}}
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: back-app-config
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 2
            periodSeconds: 5

---
# create back-app service
apiVersion: v1
kind: Service
metadata:
  name: back-app
  namespace: corewar-staging
spec:
  selector:
    app: back-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000

---
# create front-app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-app
  namespace: corewar-staging
spec:
  selector:
    matchLabels:
      app: front-app
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: front-app
    spec:
      containers:
        - name: front-app
          image: onorahubleur/corewar-front-app:staging-{{COMMIT_SHA}}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 2
            periodSeconds: 5

---
# create front-app service
apiVersion: v1
kind: Service
metadata:
  name: front-app
  namespace: corewar-staging
spec:
  selector:
    app: front-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
# create apps ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: apps-ingress
    namespace: corewar-staging
    annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
    tls:
        - hosts:
              - staging-corewar.ozyria.fr
              - staging-corewar-api.ozyria.fr
          secretName: ozyria-tls
    rules:
        - host: staging-corewar.ozyria.fr
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: front-app
                            port:
                                number: 80
        - host: staging-corewar-api.ozyria.fr
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: back-app
                            port:
                                number: 80
