name: Staging workflow

on:
    push:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: true

jobs:
    values:
        name: Set up staging values
        runs-on: ubuntu-latest
        outputs:
            sha_short: ${{ steps.set-values.outputs.sha_short }}
        steps:
            - name: Set up staging values
              id: set-values
              run: |
                  echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

    lint:
        name: Lint
        uses: ./.github/workflows/lint.yaml

    build:
        name: Build apps
        needs:
            - lint
            - values

        uses: ./.github/workflows/build-images.yaml
        with:
            buildArgs: |
                ENVIRONMENT=staging
            tags: |
                staging-latest
                staging-${{ needs.values.outputs.sha_short }}
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    deploy:
        name: Deploy to Kubernetes
        needs:
            - build
            - values
        runs-on: ubuntu-24.04
        steps:
            - name: Install OpenVPN
              run: |
                  sudo apt-get update
                  sudo apt-get install -y openvpn openvpn-systemd-resolved

            - name: Set up OpenVPN config
              run: |
                  echo "${{ secrets.OVPN_CONFIG_DATA }}" | base64 -d > /tmp/ci.ovpn

            - name: Set up kubeconfig
              run: |
                  mkdir -p ~/.kube
                  echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Checkout
              uses: actions/checkout@v4

            - name: Start OpenVPN
              run: |
                  sudo openvpn --config /tmp/ci.ovpn --daemon
                  sleep 10

            - name: Deploy
              run: |
                  ./infra/deploy_staging.sh ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ needs.values.outputs.sha_short }}

            - name: Disconnect VPN
              run: |
                  sudo killall openvpn || true

    comment-discord:
        name: Notify Discord with deployment info
        needs:
            - deploy
            - values
        runs-on: ubuntu-24.04
        steps:
            - name: Send Discord notification
              run: |
                  curl -H "Content-Type: application/json" \
                      -d "{\"content\": \"ðŸš€ Deployment Info\n\nCommit \`${{ needs.values.outputs.sha_short }}\` has been deployed to the **staging environment**.\n\n- Frontend: \`https://staging-corewar.ozyria.fr\`\n- Backend: \`https://staging-corewar-api.ozyria.fr\`\n- Exec API: \`https://staging-corewar-exec.ozyria.fr\`\n\n> Note: This environment is for testing purposes only.\"}" \
                      ${{ secrets.DISCORD_WEBHOOK_URL }}

    clean-old-images:
        name: Clean old staging images
        needs: build
        uses: ./.github/workflows/clean-old-images.yaml
        with:
            tagPrefix: staging-
            keepCount: 10
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
