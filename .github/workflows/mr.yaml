name: MR workflow

env:
    PNPM_VERSION: '10.12.4'
    NODE_VERSION: '23'

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
    cancel-in-progress: true

jobs:
    lint-front-app:
        name: Lint front-app
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/front-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-back-app:
        name: Lint back-app
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/back-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-server-common:
        name: Lint server-common
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: libs/server-common

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    build:
        name: Build apps
        needs:
            - lint-front-app
            - lint-back-app
            - lint-server-common

        runs-on: ubuntu-24.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to Docker Registry
              uses: docker/login-action@v3
              with:
                  registry: registry.ozyria.fr
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Build and push back-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: back-app
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/back-app:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/back-app:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

            - name: Build and push migration job image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: migrate
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/migrate-job:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/migrate-job:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

            - name: Build and push front-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: front-app
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/front-app:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/front-app:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

    deploy:
        name: Deploy to Kubernetes
        needs: build
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Set up kubeconfig
              run: |
                mkdir -p ~/.kube
                echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Deploy
              run: |
                  ./infra/deploy_mr.sh ${{ github.event.pull_request.number }} ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ secrets.TLS_CERT }} ${{ secrets.TLS_KEY }} ${{ steps.vars.outputs.sha_short }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}

            - name: Comment MR with deployment info
              uses: mshick/add-pr-comment@v2
              with:
                allow-repeats: true
                message: |
                  🚀 Deployment Info

                  The MR has been deployed to a temporary environment for testing

                  - Frontend: `https://mr${{ github.event.pull_request.number }}-corewar.ozyria.fr`
                  - Backend: `https://mr${{ github.event.pull_request.number }}-corewar-api.ozyria.fr`

                  > Note: The environment will be automatically deleted when the MR is closed

    delete-mr-namespace:
        name: Delete MR Namespace
        if: ${{ github.event.action == 'closed' }}

        runs-on: ubuntu-24.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up kubeconfig
              run: |
                mkdir -p ~/.kube
                echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Delete MR Namespace
              run: |
                  kubectl delete namespace corewar-mr-${{ github.event.pull_request.number }} --ignore-not-found --insecure-skip-tls-verify

            - name: Comment MR with cleanup info
              uses: mshick/add-pr-comment@v2
              with:
                allow-repeats: true
                message: |
                  🗑️ Cleanup Info

                  The temporary environment for this MR has been deleted.
