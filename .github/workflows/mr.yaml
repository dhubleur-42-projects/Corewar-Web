name: MR workflow

env:
    PNPM_VERSION: '10.12.4'
    NODE_VERSION: '23'

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
    cancel-in-progress: true

jobs:
    lint-front-app:
        name: Lint front-app
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/front-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-back-app:
        name: Lint back-app
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/back-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-exec-app:
        name: Lint exec-app
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: apps/exec-app

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    lint-server-common:
        name: Lint server-common
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}

        runs-on: ubuntu-24.04

        defaults:
            run:
                working-directory: libs/server-common

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: ${{ env.PNPM_VERSION }}
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'pnpm'

            - name: Install dependencies
              run: pnpm install

            - name: Lint app
              run: pnpm lint

    build:
        name: Build apps
        needs:
            - lint-front-app
            - lint-back-app
            - lint-exec-app
            - lint-server-common

        runs-on: ubuntu-24.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Log in to Docker Registry
              uses: docker/login-action@v3
              with:
                  registry: registry.ozyria.fr
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Build and push back-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: back-app
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/back-app:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/back-app:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

            - name: Build and push migration job image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: migrate
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/migrate-job:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/migrate-job:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

            - name: Build and push exec-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: exec-app
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/exec-app:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/exec-app:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

            - name: Build and push front-app image
              uses: docker/build-push-action@v6
              with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  target: front-app
                  platforms: linux/amd64
                  build-args: |
                      MR_ID=${{ github.event.pull_request.number }}
                      ENVIRONMENT=mr
                  tags: |
                      registry.ozyria.fr/corewar/front-app:mr-${{ github.event.pull_request.number }}-latest
                      registry.ozyria.fr/corewar/front-app:mr-${{ github.event.pull_request.number }}-${{ steps.vars.outputs.sha_short }}

    deploy:
        name: Deploy to Kubernetes
        needs: build
        runs-on: ubuntu-24.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Compute short SHA
              id: vars
              run: echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

            - name: Set up kubeconfig
              run: |
                mkdir -p ~/.kube
                echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Deploy
              run: |
                  ./infra/deploy_mr.sh ${{ github.event.pull_request.number }} ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ secrets.TLS_CERT }} ${{ secrets.TLS_KEY }} ${{ steps.vars.outputs.sha_short }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}

            - name: Comment MR with deployment info
              uses: mshick/add-pr-comment@v2
              with:
                allow-repeats: true
                message: |
                  🚀 Deployment Info

                  The MR has been deployed to a temporary environment for testing

                  - Frontend: `https://mr${{ github.event.pull_request.number }}-corewar.ozyria.fr`
                  - Backend: `https://mr${{ github.event.pull_request.number }}-corewar-api.ozyria.fr`
                  - Exec API: `https://mr${{ github.event.pull_request.number }}-corewar-exec.ozyria.fr`

                  > Note: The environment will be automatically deleted when the MR is closed

    clean-old-images:
        name: Clean old MR images
        needs: build
        runs-on: ubuntu-24.04
        strategy:
          matrix:
            image:
              - back-app
              - migrate-job
              - front-app
              - exec-app
        steps:
          - name: List ${{ matrix.image }} tags
            id: list-tags
            run: |
              IMAGE="corewar/${{ matrix.image }}"
              TAG_PREFIX=mr-${{ github.event.pull_request.number }}-
              echo "Listing tags starting with $TAG_PREFIX..."
              TAGS=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                "https://registry.ozyria.fr/v2/$IMAGE/tags/list" \
                | jq -r '.tags[] | select(startswith("'$TAG_PREFIX'"))' | paste -sd "," -)
              echo "tags=$TAGS" >> $GITHUB_OUTPUT
              echo "Found tags: $TAGS"

          - name: Delete old ${{ matrix.image }} tags
            if: steps.list-tags.outputs.tags != ''
            run: |
              IMAGE="corewar/${{ matrix.image }}"
              TAGS="${{ steps.list-tags.outputs.tags }}"

              IFS=',' read -ra TAG_ARRAY <<< "$TAGS"
                
              for TAG in "${TAG_ARRAY[@]}"; do
                CREATED=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                  "https://registry.ozyria.fr/v2/$IMAGE/manifests/$TAG" \
                  | jq -r '.history[0].v1Compatibility | fromjson.created' 2>/dev/null || echo "1970-01-01T00:00:00Z")
                echo "$CREATED $TAG"
              done | sort -r | tee sorted_tags.txt

              tail -n +10 sorted_tags.txt | while read CREATED TAG; do
                echo "Deleting old tag $TAG ($CREATED)..."
                DIGEST=$(curl -s -I -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                  -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
                  "https://registry.ozyria.fr/v2/$IMAGE/manifests/$TAG" \
                  | grep docker-content-digest | awk '{print $2}' | tr -d $'\r')

                if [ -n "$DIGEST" ]; then
                  curl -s -X DELETE -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                    "https://registry.ozyria.fr/v2/$IMAGE/manifests/$DIGEST"
                  echo "Deleted $TAG ($DIGEST)"
                else
                  echo "Skipping $TAG, could not resolve digest."
                fi
              done

    delete-mr-environment:
        name: Delete MR environment
        if: ${{ github.event.action == 'closed' }}

        runs-on: ubuntu-24.04

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up kubeconfig
              run: |
                mkdir -p ~/.kube
                echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Delete MR Namespace
              run: |
                  kubectl delete namespace corewar-mr-${{ github.event.pull_request.number }} --ignore-not-found --insecure-skip-tls-verify

            - name: Comment MR with cleanup info
              uses: mshick/add-pr-comment@v2
              with:
                allow-repeats: true
                message: |
                  🗑️ Cleanup Info

                  The temporary environment for this MR has been deleted.

    delete-mr-images:
        name: Delete MR images
        needs: delete-mr-environment
        runs-on: ubuntu-24.04
        strategy:
          matrix:
            image:
              - back-app
              - migrate-job
              - front-app
              - exec-app
        steps:
          - name: List ${{ matrix.image }} tags
            id: list-tags
            run: |
              IMAGE="corewar/${{ matrix.image }}"
              TAG_PREFIX=mr-${{ github.event.pull_request.number }}-
              echo "Listing tags starting with $TAG_PREFIX..."
              TAGS=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                "https://registry.ozyria.fr/v2/$IMAGE/tags/list" \
                | jq -r '.tags[] | select(startswith("'$TAG_PREFIX'"))' | paste -sd "," -)
              echo "tags=$TAGS" >> $GITHUB_OUTPUT
              echo "Found tags: $TAGS"

          - name: Delete ${{ matrix.image }} tags
            if: steps.list-tags.outputs.tags != ''
            run: |
              IMAGE="corewar/${{ matrix.image }}"
              TAGS="${{ steps.list-tags.outputs.tags }}"

              IFS=',' read -ra TAG_ARRAY <<< "$TAGS"
              
              for TAG in "${TAG_ARRAY[@]}"; do
                echo "Deleting $TAG..."
                
                DIGEST=$(curl -s -I -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                  -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
                  "https://registry.ozyria.fr/v2/$IMAGE/manifests/$TAG" \
                  | grep docker-content-digest | awk '{print $2}' | tr -d $'\r')
                
                if [ -n "$DIGEST" ]; then
                  curl -s -X DELETE -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} \
                    "https://registry.ozyria.fr/v2/$IMAGE/manifests/$DIGEST"
                  echo "Deleted $TAG ($DIGEST)"
                else
                  echo "Could not find digest for $TAG, skipping..."
                fi
              done