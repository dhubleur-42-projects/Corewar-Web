name: MR workflow

on:
    pull_request:
        types: [opened, synchronize, reopened, closed]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
    cancel-in-progress: true

jobs:
    update:
        if: ${{ github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened' }}
        name: Update MR workflow entry point
        runs-on: ubuntu-latest
        steps:
            - name: Inform
              run: echo "Starting MR update workflow for MR ${{ github.event.pull_request.number }}"

    values:
        name: Set up MR values
        needs: update
        runs-on: ubuntu-latest
        outputs:
            sha_short: ${{ steps.set-values.outputs.sha_short }}
        steps:
            - name: Set up MR values
              id: set-values
              run: |
                  echo "sha_short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
    lint:
        name: Lint
        needs: update
        uses: ./.github/workflows/lint.yaml

    build:
        name: Build and push images
        needs:
            - lint
            - values
        uses: ./.github/workflows/build-images.yaml
        with:
            buildArgs: |
                MR_ID=${{ github.event.pull_request.number }}
                ENVIRONMENT=mr
            tags: |
                mr-${{ github.event.pull_request.number }}-latest
                mr-${{ github.event.pull_request.number }}-${{ needs.values.outputs.sha_short }}
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    deploy:
        name: Deploy to Kubernetes
        needs:
            - build
            - values
        runs-on: ubuntu-24.04
        steps:
            - name: Install OpenVPN
              run: |
                  sudo apt-get update
                  sudo apt-get install -y openvpn openvpn-systemd-resolved

            - name: Set up OpenVPN config
              run: |
                  echo "${{ secrets.OVPN_CONFIG_DATA }}" | base64 -d > /tmp/ci.ovpn

            - name: Set up kubeconfig
              run: |
                  mkdir -p ~/.kube
                  echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Checkout
              uses: actions/checkout@v4

            - name: Start OpenVPN
              run: |
                  sudo openvpn --config /tmp/ci.ovpn --daemon
                  sleep 10

            - name: Deploy
              run: |
                  ./infra/deploy_mr.sh ${{ github.event.pull_request.number }} ${{ secrets.API_CLIENT_ID }} ${{ secrets.API_CLIENT_SECRET }} ${{ secrets.TLS_CERT }} ${{ secrets.TLS_KEY }} ${{ needs.values.outputs.sha_short }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}

            - name: Disconnect VPN
              run: |
                  sudo killall openvpn || true

            - name: Comment MR with deployment info
              uses: mshick/add-pr-comment@v2
              with:
                  allow-repeats: true
                  message: |
                      üöÄ Deployment Info

                      The MR has been deployed to a temporary environment for testing

                      - Frontend: `https://mr${{ github.event.pull_request.number }}-corewar.ozyria.fr`
                      - Backend: `https://mr${{ github.event.pull_request.number }}-corewar-api.ozyria.fr`
                      - Exec API: `https://mr${{ github.event.pull_request.number }}-corewar-exec.ozyria.fr`

                      > Note: The environment will be automatically deleted when the MR is closed

    clean-old-images:
        name: Clean old MR images
        needs: build
        uses: ./.github/workflows/clean-old-images.yaml
        with:
            tagPrefix: mr-${{ github.event.pull_request.number }}-
            keepCount: 10
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    delete:
        if: ${{ github.event.action == 'closed' }}
        name: Delete MR workflow entry point
        runs-on: ubuntu-latest
        steps:
            - name: Inform
              run: echo "Starting MR delete workflow for MR ${{ github.event.pull_request.number }}"

    delete-mr-environment:
        name: Delete MR environment
        needs: delete

        runs-on: ubuntu-24.04

        steps:
            - name: Install OpenVPN
              run: |
                  sudo apt-get update
                  sudo apt-get install -y openvpn openvpn-systemd-resolved

            - name: Set up OpenVPN config
              run: |
                  echo "${{ secrets.OVPN_CONFIG_DATA }}" | base64 -d > /tmp/ci.ovpn

            - name: Set up kubeconfig
              run: |
                  mkdir -p ~/.kube
                  echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > ~/.kube/config

            - name: Start OpenVPN
              run: |
                  sudo openvpn --config /tmp/ci.ovpn --daemon
                  sleep 10

            - name: Delete MR Namespace
              run: |
                  kubectl delete namespace corewar-mr-${{ github.event.pull_request.number }} --ignore-not-found

            - name: Disconnect VPN
              run: |
                  sudo killall openvpn || true

            - name: Comment MR with cleanup info
              uses: mshick/add-pr-comment@v2
              with:
                  allow-repeats: true
                  message: |
                      üóëÔ∏è Cleanup Info

                      The temporary environment for this MR has been deleted.

    delete-mr-images:
        name: Delete MR images
        needs: delete-mr-environment
        uses: ./.github/workflows/clean-old-images.yaml
        with:
            tagPrefix: mr-${{ github.event.pull_request.number }}-
            keepCount: 0
        secrets:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
